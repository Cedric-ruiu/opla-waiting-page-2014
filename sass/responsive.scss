@import 'compass';

@import 'components/normalize';
@import 'components/helper';

$media-minimobile-min : 320px;
$media-minimobile-max : 669px;
$media-mobile-min     : 670px;
// Unsemantic config
$media-mobile-max     : 896px;
$media-tablet-min     : 897px;
$media-tablet-max     : 1199px;
$media-desktop-min    : 1200px;
$container-max-width  : 1200px;
$gutter-half          : 10px;

/* Use like : @include respond-to(mobile) { width: 100% ;} */
@mixin respond-to($media) {
    @if $media == minimobile {
        @media only screen and (max-width: $media-minimobile-max) { @content; }
    }
    @else if $media == mobile {
        @media only screen and (min-width: $media-mobile-min) and (max-width: $media-mobile-max) { @content; }
    }
    @else if $media == mobiles {
        @media only screen and (max-width: $media-mobile-max) { @content; }
    }
    @else if $media == tablet {
        @media only screen and (min-width: $media-tablet-min) and (max-width: $media-tablet-max) { @content; }
    }
    @else if $media == mobile-tablet {
        @media only screen and (min-width: $media-mobile-min) and (max-width: $media-tablet-max) { @content; }
    }
    @else if $media == mobility {
        @media only screen and (max-width: $media-tablet-max) { @content; }
    }
    @else if $media == desktop {
        @media only screen and (min-width: $media-desktop-min) { @content; }
    }
    @else if $media == tablet-desktop {
        @media only screen and (min-width: $media-tablet-min) { @content; }
    }
    @else if $media == mobile-desktop {
        @media only screen and (min-width: $media-mobile-min) { @content; }
    }
}

@include respond-to(minimobile) { 
    .hide-on-minimobile{
        display: none !important;
    }
}

@include respond-to(mobiles) { 
    .hide-on-mobiles{
        display: none !important;
    }
}

@include respond-to(mobility) { 
    .hide-on-mobility{
        display: none !important;
    }
}


/* ==========================================================================
   TYPOGRAPHY
   ========================================================================== */

$font-regular:  'Amaranth', Verdana, sans-serif;
$font-bold:     'Amaranth', Verdana, sans-serif;
.font-regular{  font-family: $font-regular; font-weight: 400; }
.font-bold{     font-family: $font-bold; font-weight: 700; } // font-size fix ugly typo rendering (FF/webkit)


/* ==========================================================================
   COLORS THEME
   ========================================================================== */

$color1: #2ecc71; // green


/* ==========================================================================
   LAYOUT
   ========================================================================== */

*{ @include box-sizing(border-box); }

html, body{
    height: 100%;
    min-width: 320px;
}

body{
    color: #fff;
    font-size: 35px;
    @extend .font-regular;
    
    @include respond-to(mobiles) { font-size: 20px; }
}
 
.layout{ 
    position: relative;
    min-height: 100%;
    height: auto !important;
    height: 100%;
    overflow: hidden;
    background-color: $color1;
}

.container{
    position: relative;
    width: 100%;
    max-width: $container-max-width;
    margin: 20px auto 20px auto;
    text-align: center;
    padding-left: 20px;
    padding-right: 20px;
    @include respond-to(mobiles) {
        margin: 20px auto 20px auto;
        padding-left: 10px;
        padding-right: 10px;
    }
}

h1{
    display: block;
    @include image('logo.png');
    @include background-size(contain);
    margin: 0 auto 28px auto;
    text-align: center;
    max-width: 100%;

    @include respond-to(mobiles) { margin: 0 auto; }
}

img{ 
    position: relative;
    max-width: 100%;
}

a{
    color: #fff;
    text-decoration: none;
    @extend .font-bold;
    &:hover{ text-decoration: underline; }
}

.tt-wrapper{
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted #fff;
    cursor: help;

    &:hover span, &:focus span, &:active span{
        opacity: 0.9;
        bottom: 45px;
    }
    
    span{
        background-color: lighten($color1, 10%);
        border: 2px solid #fff;
        border-radius: 5px;
        bottom: 100px;
        box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        display: block;
        font-size: 23px;
        font-weight: 400;
        height: auto;
        left: 0;
        line-height: 20px;
        margin-left: 0;
        opacity: 0;
        overflow: visible;
        padding: 10px;
        pointer-events: none;
        position: absolute;
        text-align: center;
        text-indent: 0;
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out 0s;
        white-space: nowrap;
        width: auto;

        @include respond-to(mobiles) {
            white-space: normal;
            font-size: 16px;
            width: 100%;
        }

        &:before, &:after{
            content: '';
            position: absolute;
            bottom: -13px;
            left: 100px;
            margin-left: -9px;
            width: 0;
            height: 0;
            border-left: 10px solid transparent;
            border-right: 10px solid transparent;
            border-top: 10px solid rgba(0,0,0,0.1);

            @include respond-to(mobiles) { left: 50%; }
        }

        &:after{
            bottom: -12px;
            margin-left: -10px;
            border-top: 10px solid #fff;
        }
    }
}
